---
// Importamos los datos desde el archivo compartido
import {
  resourceCategories,
  educationalResources,
} from "../data/educationalResources.js";

// Filtrar recursos destacados para el carrusel (ya no se usa pero mantenemos para compatibilidad)
const featuredResources = educationalResources.filter(
  (resource) => resource.featured
);
---

<section id="recursos" class="resources">
  <div class="container">
    <div class="section-title">
      <h2>Recursos Educativos</h2>
      <p>
        Aprende sobre tecnolog√≠a y producci√≥n de eventos con nuestros art√≠culos
        y gu√≠as especializadas
      </p>
    </div>

    <!-- Filtro por categor√≠as -->
    <div class="resource-filter">
      <h3>Explora por categor√≠a</h3>
      <div class="category-buttons">
        <button class="category-btn active" data-category="all">Todos</button>
        {
          resourceCategories.map((category) => (
            <button class="category-btn" data-category={category.id}>
              <span class="category-icon">{category.icon}</span>
              <span class="category-name">{category.name}</span>
            </button>
          ))
        }
      </div>
    </div>

    <!-- Grid de recursos -->
    <div class="resources-grid">
      {
        educationalResources.map((resource) => (
          <div class="resource-card" data-category={resource.category}>
            <div class="resource-image">
              <img src={resource.imageUrl} alt={resource.title} />
            </div>
            <div class="category-tag">
              {
                resourceCategories.find((cat) => cat.id === resource.category)
                  .icon
              }{" "}
              {
                resourceCategories.find((cat) => cat.id === resource.category)
                  .name
              }
            </div>
            <div class="resource-content">
              <h4>{resource.title}</h4>
              <p>{resource.description}</p>
              <div class="card-footer">
                <span class="read-time">{resource.readTime} de lectura</span>
                <div class="card-actions">
                  <a href={`/recursos/${resource.slug}`} class="read-more">
                    Leer art√≠culo
                  </a>
                  <a href={resource.downloadPdf} class="download-pdf" download>
                    <span class="pdf-icon">üìÑ</span>
                    <span class="pdf-text">PDF</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  .resources {
    background-color: var(--color-light);
    padding: 5rem 0;
  }

  /* Filtro por categor√≠as */
  .resource-filter {
    margin-bottom: 3rem;
    text-align: center;
  }

  .resource-filter h3 {
    font-size: 1.4rem;
    color: var(--color-secondary);
    margin-bottom: 1.5rem;
  }

  .category-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.75rem;
  }

  .category-btn {
    background-color: white;
    border: 1px solid #ddd;
    border-radius: 30px;
    padding: 0.6rem 1.2rem;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .category-btn:hover {
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .category-btn.active {
    background-color: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
  }

  .category-icon {
    font-size: 1.1rem;
  }

  /* Grid de recursos */
  .resources-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
  }

  .resource-card {
    background-color: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition:
      transform 0.3s,
      box-shadow 0.3s;
    display: flex;
    flex-direction: column;
  }

  .resource-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.12);
  }

  .resource-image {
    height: 180px;
    overflow: hidden;
  }

  .resource-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s;
  }

  .resource-card:hover .resource-image img {
    transform: scale(1.05);
  }

  .category-tag {
    background-color: var(--color-light);
    color: var(--color-primary);
    display: inline-block;
    padding: 0.4rem 0.8rem;
    margin: -1rem 1rem 0;
    position: relative;
    z-index: 1;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: 500;
  }

  .resource-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  .resource-content h4 {
    color: var(--color-primary);
    font-size: 1.2rem;
    margin-bottom: 0.8rem;
    line-height: 1.4;
  }

  .resource-content p {
    margin-bottom: 1.2rem;
    font-size: 0.9rem;
    line-height: 1.6;
    color: var(--color-text);
    flex: 1;
  }

  /* Card footer con tiempo de lectura y acciones */
  .card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .read-time {
    font-size: 0.7rem;
    color: var(--color-text);
    opacity: 0.7;
  }

  .card-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .read-more {
    color: var(--color-primary);
    font-weight: 600;
    font-size: 0.9rem;
    text-decoration: none;
    position: relative;
  }

  .read-more::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 2px;
    bottom: -2px;
    left: 0;
    background-color: var(--color-primary);
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s;
  }

  .read-more:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }

  .download-pdf {
    display: flex;
    align-items: center;
    gap: 0.3rem;
    background-color: var(--color-light);
    padding: 0.4rem 0.7rem;
    border-radius: 4px;
    text-decoration: none;
    color: var(--color-primary);
    font-size: 0.85rem;
    font-weight: 500;
    transition: background-color 0.3s;
  }

  .download-pdf:hover {
    background-color: var(--color-primary);
    color: white;
  }

  .pdf-icon {
    font-size: 1rem;
  }

  /* CTA para suscripci√≥n */
  .resources-cta {
    background-color: white;
    padding: 3rem;
    border-radius: 12px;
    text-align: center;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.05);
  }

  .resources-cta h3 {
    color: var(--color-primary);
    font-size: 1.8rem;
    margin-bottom: 1rem;
  }

  .resources-cta p {
    max-width: 700px;
    margin: 0 auto 2rem;
    font-size: 1.1rem;
    line-height: 1.6;
  }

  .subscription-form {
    max-width: 600px;
    margin: 0 auto;
  }

  .form-group {
    display: flex;
    margin-bottom: 1rem;
  }

  .subscription-form input[type="email"] {
    flex: 1;
    padding: 0.8rem 1.2rem;
    border: 1px solid #ddd;
    border-radius: 8px 0 0 8px;
    font-size: 1rem;
  }

  .subscription-form .btn-primary {
    border-radius: 0 8px 8px 0;
    padding: 0 1.5rem;
    font-weight: 600;
    border: none;
    cursor: pointer;
  }

  .form-notice {
    font-size: 0.85rem;
    color: var(--color-text);
    opacity: 0.8;
    text-align: left;
  }

  .checkbox-container {
    display: flex;
    align-items: flex-start;
    gap: 0.5rem;
    cursor: pointer;
  }

  .checkbox-container input {
    margin-top: 0.2rem;
  }

  /* Responsive */
  @media (max-width: 992px) {
    .featured-card {
      min-width: 300px;
    }
  }

  @media (max-width: 768px) {
    .resources-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }

    .category-buttons {
      gap: 0.5rem;
    }

    .category-btn {
      padding: 0.5rem 1rem;
      font-size: 0.8rem;
    }

    .resources-cta {
      padding: 2rem;
    }

    .resources-cta h3 {
      font-size: 1.5rem;
    }

    .form-group {
      flex-direction: column;
      gap: 1rem;
    }

    .subscription-form input[type="email"],
    .subscription-form .btn-primary {
      border-radius: 8px;
      width: 100%;
    }
  }

  @media (max-width: 576px) {
    .featured-card {
      min-width: 280px;
    }

    .featured-image {
      height: 180px;
    }

    .resources-grid {
      grid-template-columns: 1fr;
    }

    .category-name {
      display: none;
    }

    .category-btn {
      padding: 0.5rem;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      display: flex;
      justify-content: center;
    }

    .category-icon {
      font-size: 1.2rem;
      margin: 0;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Filtro de categor√≠as
    const categoryButtons = document.querySelectorAll(".category-btn");
    const resourceCards = document.querySelectorAll(".resource-card");

    categoryButtons.forEach((button) => {
      button.addEventListener("click", () => {
        // Quitar clase active de todos los botones
        categoryButtons.forEach((btn) => btn.classList.remove("active"));
        // Agregar clase active al bot√≥n clickeado
        button.classList.add("active");

        const category = button.getAttribute("data-category");

        resourceCards.forEach((card) => {
          if (
            category === "all" ||
            card.getAttribute("data-category") === category
          ) {
            card.style.display = "flex";
          } else {
            card.style.display = "none";
          }
        });
      });
    });

    // Prevenir env√≠o de formulario (para demo)
    const subscriptionForm = document.querySelector(".subscription-form");
    if (subscriptionForm) {
      subscriptionForm.addEventListener("submit", (e) => {
        e.preventDefault();
        alert(
          "¬°Gracias por suscribirte! (Esta es una demostraci√≥n, el formulario no env√≠a datos realmente)"
        );
      });
    }
  });
</script>
